package com.proit.servicios;

import java.io.Serializable;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;

import com.proit.modelo.EntidadGenerica;
import com.proit.wicket.FacturarOnLineAuthenticatedWebApplication;

public class GenericService<T> implements Serializable {

	private static final long serialVersionUID = 1L;
	
	private Class<T> t;
	
	public GenericService(final Class<T> t) {
		super();
		this.t = t;
	}

	public EntidadGenerica get(int id) {
		Session session = FacturarOnLineAuthenticatedWebApplication.getHibernateSession();
		Criteria criteria = session.createCriteria(t);
		criteria.add(Restrictions.eq("id", id));
		return (EntidadGenerica)criteria.uniqueResult();
	}
	
	public Object createOrUpdate(EntidadGenerica entidad) {
		Session session = FacturarOnLineAuthenticatedWebApplication.getHibernateSession();
	    entidad.setBorrado(false);
	    if (entidad.getId() == 0) {
	    	return  (Integer) session.save(entidad);
	    } else {
	    	return (EntidadGenerica) session.merge(entidad);
	    }
	}
	
	@SuppressWarnings("unchecked")
	public void delete(int id) {
		Session session = FacturarOnLineAuthenticatedWebApplication.getHibernateSession();
	    T entidad = (T) get(id); 
	    ((EntidadGenerica) entidad).setBorrado(true);
	    session.update(entidad);
	}

	/**
	 * Utilizado para ver en cuantas entidades esta siendo utilizado
	 * @param clase
	 * @param nombreColumna
	 * @param entidad
	 * @return
	 */
	@SuppressWarnings("rawtypes")
	protected long getCantidadUsados(Class clase, String nombreColumna, EntidadGenerica entidad) {
		Session session = FacturarOnLineAuthenticatedWebApplication.getHibernateSession();
		Criteria criteria = session.createCriteria(clase);
		criteria.add(Restrictions.eq(nombreColumna, entidad));
		criteria.add(Restrictions.eq("borrado", false));
		criteria.setProjection(Projections.rowCount());
		return (Long) criteria.uniqueResult();
	}
	
	public void flushSession(){
		Session session = FacturarOnLineAuthenticatedWebApplication.getHibernateSession();
		session.flush();
	}
	
}
